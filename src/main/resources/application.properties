spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#^^^prevents a warning exception from being thrown. See: https://github.com/spring-projects/spring-boot/issues/12007
spring.jpa.open-in-view=false
#^^^suppresses warning exception related to OSIV https://vladmihalcea.com/the-open-session-in-view-anti-pattern/
spring.datasource.username=$(database_config.username)
spring.datasource.password=$(database_config.password)
spring.datasource.url=${database_config.jdbcurl}

#Connection
spring.kafka.jaas.enabled=true
spring.kafka.jaas.login-module=org.apache.kafka.common.security.plain.PlainLoginModule
spring.kafka.jaas.options.username=${messages_config.user}
spring.kafka.jaas.options.password=${messages_config.password}
spring.kafka.bootstrap-servers=${messages_config.kafka_brokers_sasl[0]}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN

#Producer
spring.kafka.template.default-topic=orders
spring.kafka.producer.client-id=event-streams-kafka
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#Consumer
listener.topic=orders
spring.kafka.consumer.group-id=foo
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer